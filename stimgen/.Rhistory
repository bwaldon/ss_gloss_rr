install.packages("tidyverse")
names(knitr::knit_engines$get())
install.pandoc()
install.packages("installr")
install.packages("brms")
library(jsonlite)
items <- read.csv("items.csv", header = TRUE)
setwd("~/Documents/GitHub/ss_gloss_rr/stimgen")
library(jsonlite)
items <- read.csv("items.csv", header = TRUE)
expr <- read.csv("expr.csv", header = TRUE)
polarities <- c("positive","negative")
stims <- data.frame(matrix(ncol = 9, nrow = 0))
colnames(stims) <- colnames(stims) <- c("id","expr","polarity","list","primetype","setup","question","response","type")
fileConn<-file("stims.js")
writeLines("",fileConn)
close(fileConn)
for (m in seq(1:14)) {
listofStims <- data.frame(matrix(ncol = 9, nrow = 0))
colnames(listofStims) <- colnames(stims) <- c("id","expr","polarity","list","primetype","setup","question","response","type")
for (n in seq(1:14)) {
p <- n + m
#  for (p in c(o, o+2)) {
stim_id <- toString(items$id[(p %% 14) + 1])
stim_polarity <- polarities[(n %% 2) + 1]
stim_expr <- toString(expr$expr[(n %% 7) + 1])
if(stim_expr != "between") {
num_expression = paste(toString(expr$expr_print[(n %% 7) + 1]), " ",
toString(items$num[(p %% 14) + 1]))
} else {
num_expression = paste(toString(expr$expr_print[(n %% 7) + 1]), " ",
toString(items$n_between[(p %% 14) + 1]), " and ", toString(items$num[(p %% 14) + 1]))
}
if (stim_expr == "some") {
stim_question <- toString(items$question_some[(p %% 14) + 1])
stim_setup <- gsub("EXPR", "", toString(items$setup[(p %% 14) + 1]))
if (stim_polarity == "positive") {
stim_response <- gsub("EXPR", stim_expr, toString(items$response_pos[(p %% 14) + 1]))
stim_response <- paste("Yes. ", stim_response)
} else {
stim_response <- gsub("EXPR", stim_expr, toString(items$response_neg[(p %% 14) + 1]))
stim_response <- paste("No. ", stim_response)
}
} else if (stim_expr == "any") {
stim_question <- toString(items$question_any[(p %% 14) + 1])
stim_setup <- gsub("EXPR", "", toString(items$setup[(p %% 14) + 1]))
if (stim_polarity == "positive") {
stim_response <- gsub("EXPR", stim_expr, toString(items$response_pos[(p %% 14) + 1]))
stim_response <- paste("Yes. ", stim_response)
} else {
stim_response <- gsub("EXPR", stim_expr, toString(items$response_neg[(p %% 14) + 1]))
stim_response <- paste("No. ", stim_response)
}
} else {
stim_setup <- gsub("EXPR", num_expression, toString(items$setup[(p %% 14) + 1]))
stim_question <- toString(items$question_primed[(p %% 14) + 1])
if (stim_polarity == "positive") {
stim_response <- gsub("EXPR", num_expression, toString(items$response_pos[(p %% 14) + 1]))
stim_response <- paste("Yes. ", stim_response)
} else {
stim_response <- gsub("EXPR", num_expression, toString(items$response_neg[(p %% 14) + 1]))
stim_response <- paste("No. ", stim_response)
}
}
listofStims[nrow(listofStims)+1,] <- list(id = stim_id,
expr = stim_expr,
polarity = stim_polarity,
list = m,
primetype = "primed",
setup = stim_setup,
question = stim_question,
response = stim_response,
type = "critical")
# }
}
listofStims.json <- toJSON(listofStims)
write(paste("var stims_",m,"_","primed =", toString(listofStims.json),"\n",sep=""),
file="stims.js", append = TRUE)
stims <- rbind(stims, listofStims)
}
for (m in seq(1:14)) {
listofStims <- data.frame(matrix(ncol = 9, nrow = 0))
colnames(listofStims) <- colnames(stims) <- c("id","expr","polarity","list","primetype","setup","question","response","type")
for (n in seq(1:14)) {
p <- n + m
#  for (p in c(o, o+2)) {
stim_id <- toString(items$id[(p %% 14) + 1])
stim_polarity <- polarities[(n %% 2) + 1]
stim_expr <- toString(expr$expr[(n %% 7) + 1])
stim_setup <- gsub("EXPR", "", toString(items$setup[(p %% 14) + 1]))
stim_question <- toString(items$question_neutral[(p %% 14) + 1])
if(stim_expr != "between") {
num_expression = paste(toString(expr$expr_print[(n %% 7) + 1]), " ",
toString(items$num[(p %% 14) + 1]))
} else {
num_expression = paste(toString(expr$expr_print[(n %% 7) + 1]), " ",
toString(items$n_between[(p %% 14) + 1]), " and ", toString(items$num[(p %% 14) + 1]))
}
if (stim_expr == "some") {
if (stim_polarity == "positive") {
stim_response <- gsub("EXPR", stim_expr, toString(items$response_pos[(p %% 14) + 1]))
} else {
stim_response <- gsub("EXPR", stim_expr, toString(items$response_neg[(p %% 14) + 1]))
}
} else if (stim_expr == "any") {
if (stim_polarity == "positive") {
stim_response <- gsub("EXPR", stim_expr, toString(items$response_pos[(p %% 14) + 1]))
} else {
stim_response <- gsub("EXPR", stim_expr, toString(items$response_neg[(p %% 14) + 1]))
}
} else {
if (stim_polarity == "positive") {
stim_response <- gsub("EXPR", num_expression, toString(items$response_pos[(p %% 14) + 1]))
} else {
stim_response <- gsub("EXPR", num_expression, toString(items$response_neg[(p %% 14) + 1]))
}
}
listofStims[nrow(listofStims)+1,] <- list(id = stim_id,
expr = stim_expr,
polarity = stim_polarity,
list = m,
primetype = "neutral",
setup = stim_setup,
question = stim_question,
response = stim_response,
type = "critical")
#  }
}
listofStims.json <- toJSON(listofStims)
write(paste("var stims_",m,"_","neutral =", toString(listofStims.json),"\n",sep=""),
file="stims.js", append = TRUE)
stims <- rbind(stims, listofStims)
}
View(stims)
